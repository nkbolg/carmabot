import collections
import logging

import aiogram.utils.exceptions
from aiogram import types


class Handlers:
    def __init__(self, bot: aiogram.Bot, target_phrases):
        self.bot = bot
        self.target_phrases = target_phrases
        self.carma = collections.defaultdict(int)

    async def start_handler(self, message: types.Message):
        reply_text = "–ü—Ä–∏–≤–µ—Ç! –Ø —Å—á–∏—Ç–∞—é –∫–∞—Ä–º—É –≤ —á–∞—Ç–∞—Ö.\n" \
                     "–Ø —É–º–µ—é —Ä–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è:\n\n" \
                     "{}".format('\n'.join(self.target_phrases))
        await message.reply(reply_text, reply=False)

    async def chat_reply_handler(self, message: types.Message):
        benefitiar_id = message.reply_to_message.from_user.id
        benefitiar_name = message.reply_to_message.from_user.full_name
        blesser_id = message.from_user.id
        blesser_name = message.from_user.full_name
        if benefitiar_id == blesser_id:
            await message.reply(
                "–ü–æ–ª–∏—Ü–∏—è –∫–∞—Ä–º—ã –ø–æ–¥–æ–∑—Ä–µ–≤–∞–µ—Ç –≤–∞—Å –≤ –ø–æ–ø—ã—Ç–∫–µ –Ω–∞–∫—Ä—É—Ç–∫–∏üòé\n–ù–µ –Ω–∞–¥–æ —Ç–∞–∫."
            )
            return
        self.carma[benefitiar_id] += 1
        self.carma[blesser_id] += 0
        reply_template = (
            f"{blesser_name} ({self.carma[blesser_id]})"
            f" —É–≤–µ–ª–∏—á–∏–ª –∫–∞—Ä–º—É {benefitiar_name} ({self.carma[benefitiar_id]})"
        )
        if benefitiar_id == self.bot.id:
            reply_template += "\n–•–æ—Ä–æ—à–µ–µ —Å–ª–æ–≤–æ –∏ –±–æ—Ç—É –ø—Ä–∏—è—Ç–Ω–æ‚ù§"
        logging.info(message)
        await message.reply(reply_template)
